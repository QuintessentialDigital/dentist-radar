import { getDb, savePractice, getPracticeByUrl, insertStatus } from './db.js';import { fetchHtml, parseList, parseStatus, searchUrl } from './scraper.js';import { sendEmail } from './alerts.js';
export async function runScan(watch){const db=getDb();const listHtml=await fetchHtml(searchUrl(watch.postcode,watch.radius_miles));const items=parseList(listHtml).slice(0,50);let alerts=0;for(const p of items){try{const html=await fetchHtml(p.url);const {statusText,acceptingFlag}=parseStatus(html);savePractice(p.url,p.name);const pr=getPracticeByUrl(p.url);insertStatus(pr.id,statusText,acceptingFlag);if(acceptingFlag===1&&watch.contact_email){await sendEmail(watch.contact_email,`Dentist Radar: "${p.name}" may be accepting NHS patients`,`"${p.name}" shows accepting NHS patients on the NHS website. Call ASAP to confirm.\nLink: ${p.url}\n\nâ€” Dentist Radar\n${process.env.PUBLIC_BASE_URL||''}`);alerts++;}}catch(e){console.error('[scan]',p.url,e.message);}await new Promise(r=>setTimeout(r,700));}return {scanned:items.length,alerts};}